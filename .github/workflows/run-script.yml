
name: Run Script

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'

  workflow_dispatch:

jobs:
  build-from-source:
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
 
      - name: Download YouTube apk
        shell: python
        run: |
          import os
          import json
          import urllib.request

          request = urllib.request.urlopen("https://api.github.com/repos/${{ github.repository }}/releases/latest").read()
          data = json.loads(request)
          for asset in data['assets']:
            if asset['name'] == 'youtube.apk':
              url = asset['browser_download_url']

          os.mkdir('build')
          urllib.request.urlretrieve(url, "./build/youtube.apk")
      
      - name: Execute script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./build-from-source.sh
          ./build-from-source.sh
          ls

  build-from-prebuilt:
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
 
      - name: Download YouTube apk
        shell: python
        run: |
          import os
          import json
          import urllib.request

          request = urllib.request.urlopen("https://api.github.com/repos/${{ github.repository }}/releases/latest").read()
          data = json.loads(request)
          for asset in data['assets']:
            if asset['name'] == 'youtube.apk':
              url = asset['browser_download_url']

          os.mkdir('build')
          urllib.request.urlretrieve(url, "./build/youtube.apk")

      - name: Execute script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./build-from-prebuilt.sh
          ./build-from-prebuilt.sh
          ls
      
      - uses: actions/upload-artifact@v2
        name: Push apk to artifact
        with:
          name: revanced.apk
          path: './revanced.apk'
      
      - id: release-tag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      
      - name: Upload apk to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: './revanced.apk'
          asset_name: revanced.apk
          tag: ${{ steps.release-tag.outputs.release }}
          overwrite: true
